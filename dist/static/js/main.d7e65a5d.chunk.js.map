{"version":3,"sources":["App.js","index.js"],"names":["App","state","passwordScore","passwordInput","score","zxcvbn","this","setState","message","className","react_default","a","createElement","id","concat","_this2","htmlFor","type","onChange","e","handleOnPasswordInput","target","value","renderFeedbackMessage","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"yPA4EeA,6MAvEbC,MAAQ,CACNC,cAAe,yFAGKC,GAAe,IAC3BC,EAAUC,IAAOF,GAAjBC,MACRE,KAAKC,SAAS,CAAEL,cAAeE,oDAGT,IAElBI,EAASC,EAEb,OAH0BH,KAAKL,MAAvBC,eAIN,KAAK,EACHM,EAAU,gBACVC,EAAY,cACZ,MACF,KAAK,EACHD,EAAU,iBACVC,EAAY,cACZ,MACF,KAAK,EACHD,EAAU,qBACVC,EAAY,eACZ,MACF,KAAK,EACHD,EAAU,iBACVC,EAAY,eACZ,MACF,KAAK,EACHD,EAAU,qBACVC,EAAY,eACZ,MACF,QACED,EAAU,GAId,OACEE,EAAAC,EAAAC,cAAA,SAAOC,GAAG,eAAeJ,UAAS,kBAAAK,OAAoBL,IAAtD,GAAAK,OACMN,qCAKD,IAAAO,EAAAT,KACP,OACEI,EAAAC,EAAAC,cAAA,OAAKH,UAAU,OACbC,EAAAC,EAAAC,cAAA,QAAMH,UAAU,WACdC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,YACbC,EAAAC,EAAAC,cAAA,OAAKH,UAAU,kBACbC,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,iBAAf,4BACAN,EAAAC,EAAAC,cAAA,SACEK,KAAK,WACLR,UAAU,eACVI,GAAG,gBACHK,SAAU,SAAAC,GAAC,OAAIJ,EAAKK,sBAAsBD,EAAEE,OAAOC,UAEpDhB,KAAKiB,0BAGVb,EAAAC,EAAAC,cAAA,UAAQK,KAAK,SAASR,UAAU,6BAAhC,mBA/DQe,aCAlBC,IAASC,OAAOhB,EAAAC,EAAAC,cAACe,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d7e65a5d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport zxcvbn from 'zxcvbn';\n\nclass App extends Component {\n  state = {\n    passwordScore: ''\n  };\n\n  handleOnPasswordInput(passwordInput) {\n    const { score } = zxcvbn(passwordInput);\n    this.setState({ passwordScore: score });\n  }\n\n  renderFeedbackMessage() {\n    const { passwordScore } = this.state;\n    let message, className;\n\n    switch (passwordScore) {\n      case 0:\n        message = 'Way too weak!';\n        className = 'text-danger';\n        break;\n      case 1:\n        message = 'Weak strength!';\n        className = 'text-danger';\n        break;\n      case 2:\n        message = 'Moderate strength!';\n        className = 'text-warning';\n        break;\n      case 3:\n        message = 'Good strength!';\n        className = 'text-success';\n        break;\n      case 4:\n        message = 'Powerful strength!';\n        className = 'text-primary';\n        break;\n      default:\n        message = '';\n        break;\n    }\n\n    return (\n      <small id=\"passwordHelp\" className={`form-text mt-2 ${className}`}>\n        {`${message}`}\n      </small>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"my-form\">\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"passwordInput\">패스워드</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"passwordInput\"\n                onChange={e => this.handleOnPasswordInput(e.target.value)}\n              />\n              {this.renderFeedbackMessage()}\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}